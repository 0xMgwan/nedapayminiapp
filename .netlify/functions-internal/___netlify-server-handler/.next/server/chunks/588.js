"use strict";exports.id=588,exports.ids=[588],exports.modules={5588:(e,r,t)=>{t.d(r,{cv:()=>i,getProvider:()=>u});var o=t(46274);let n=["https://1rpc.io/base"],a=[{url:process.env.NEXT_PUBLIC_COINBASE_BASE_RPC||"https://api.developer.coinbase.com/rpc/v1/base/n4RnEAzBQtErAI53dP6DCa6l6HRGODgV",priority:0,name:"CoinbaseCDP"},{url:"https://base-rpc.publicnode.com/",priority:1,name:"PublicNode"},{url:"https://base.llamarpc.com",priority:2,name:"LlamaRPC"},{url:"https://1rpc.io/base",priority:3,name:"1RPC"},{url:"https://base-mainnet.g.alchemy.com/v2/demo",priority:4,name:"Alchemy"},{url:"https://mainnet.base.org",priority:5,name:"Base Mainnet"},{url:"https://base.drpc.org",priority:6,name:"DRPC"},{url:"https://rpc.ankr.com/base",priority:7,name:"Ankr"}],i=async()=>{for(let e of a.filter(e=>!n.includes(e.url)).sort((e,r)=>e.priority-r.priority))try{console.log(`[LOGS] Trying RPC endpoint: ${e.name}`);let r=p(e.url);if(await s(r))return console.log(`[LOGS] Successfully connected to: ${e.name}`),r}catch(r){console.error(`[LOGS] Failed to connect to ${e.name}:`,r)}throw Error("No compatible RPC endpoints available for log/event queries.")},c=null,l=1e4,s=async(e,r=l)=>{try{let t=new Promise((e,t)=>{setTimeout(()=>t(Error("Provider health check timeout")),r)}),o=e.getBlockNumber(),n=await Promise.race([o,t]);return"number"==typeof n&&n>0}catch(e){return console.error("Provider health check failed:",e),!1}},p=e=>{let r=new o.F(e),t=r.send.bind(r);return r.send=async(e,r)=>{try{let o=new Promise((e,r)=>{setTimeout(()=>r(Error("RPC request timeout")),l)}),n=t(e,r);return await Promise.race([n,o])}catch(r){throw console.error(`RPC request failed for method ${e}:`,r),r}},r},u=async()=>{if(c){let{provider:e,timestamp:r,endpoint:t,failCount:o}=c;if(Date.now()-r<3e5&&o<3)try{if(await s(e))return console.log(`Using cached provider: ${t}`),e;c.failCount++}catch(e){console.warn("Cached provider failed health check, trying alternatives"),c.failCount++}}for(let e of[...a].sort((e,r)=>e.priority-r.priority).sort(()=>Math.random()>.3?1:-1))try{console.log(`Trying RPC endpoint: ${e.name}`);let r=p(e.url);if(await s(r))return console.log(`Successfully connected to: ${e.name}`),c={provider:r,timestamp:Date.now(),endpoint:e.url,failCount:0},r}catch(r){console.error(`Failed to connect to ${e.name}:`,r)}throw Error("Network connection issues. Please check your internet connection and try again later.")}}};